{"version":3,"file":"asoftwareworld-charts-line.js","sources":["../../app/component/line/component/line.ts","../../app/component/line/line.module.ts","../../app/component/line/public_api.ts","../../app/component/line/asoftwareworld-charts-line.ts"],"sourcesContent":["import { CurrencyPipe, PercentPipe } from '@angular/common';\nimport {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    AswChartConstants,\n    AswCurrencyPipe,\n    CurrencyCodeEnum,\n    GridOptionsEnum,\n    LegendLayoutEnum,\n    LegendPositionEnum,\n    LegendTypeEnum,\n    PointClickEvent\n} from '@asoftwareworld/charts/core';\nimport { ObjectUtils } from '@asoftwareworld/charts/utils';\nimport * as Highcharts from 'highcharts';\nimport {\n    AlignValue,\n    Options,\n    PointClickEventObject,\n    PointOptionsObject,\n    Point,\n    Series,\n    SeriesPieOptions,\n    VerticalAlignValue\n} from 'highcharts';\n\n@Component({\n    selector: 'asw-line',\n    templateUrl: './line.html',\n    styleUrls: ['./line.scss']\n})\nexport class Line implements OnChanges, AfterViewInit {\n\n    private cloneConfiguration!: Options;\n    public deviceSize: GridOptionsEnum = GridOptionsEnum.Large;\n    private viewInitialized = false;\n    @Input() config!: Options;\n    @Input() isLegendSort = true;\n    @Input() isMute = false;\n    @Input() isLegendDisplay = true;\n    @Input() icon!: string;\n    @Input() label: string | undefined;\n    @Input() amount: number | null | undefined;\n    @Input() target!: string;\n    @Input() currencyCode: CurrencyCodeEnum = CurrencyCodeEnum.INR;\n    @Input() legendPosition: LegendPositionEnum = LegendPositionEnum.Right;\n    @Input() legendType: LegendTypeEnum = LegendTypeEnum.Both;\n    @Input() legendWidthPx = 250;\n    @Input() legendLayout: LegendLayoutEnum = LegendLayoutEnum.Vertical;\n\n    @Output() donutSliceClick: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('lineChart', { static: true }) pieDonutChart!: ElementRef;\n    constructor(\n        private percentPipe: PercentPipe,\n        private currencyPipe: CurrencyPipe,\n        private aswCurrencyPipe: AswCurrencyPipe) { }\n\n    ngOnChanges(): void {\n        if (!this.viewInitialized) {\n            return;\n        }\n        this.initializeChart();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitialized = true;\n        this.initializeChart();\n    }\n\n    initializeChart(): void {\n        if (this.config) {\n            this.cloneConfiguration = this.config;\n            const containerWidth = this.pieDonutChart.nativeElement.clientWidth;\n            this.deviceSize = ObjectUtils.findDeviceSize(containerWidth);\n            this.removeChartCredit();\n            this.setDonutChartTooltip();\n            const series: SeriesPieOptions[] = this.cloneConfiguration.series as SeriesPieOptions[];\n            this.setDonutChartSeriesOptions(series);\n            if (this.legendLayout === LegendLayoutEnum.Vertical) {\n                this.setDonutChartLegendOption(this.legendWidthPx);\n            }\n            // if (this.chartType === ChartTypeEnum.Donut) {\n            //     this.setDonutChartInnerText();\n            // }\n            this.donutChartSliceClick();\n            Highcharts.chart(this.pieDonutChart.nativeElement, this.cloneConfiguration);\n        }\n    }\n\n    @HostListener('window:resize')\n    onResize(): void {\n        this.initializeChart();\n    }\n\n    private removeChartCredit(): void {\n        this.cloneConfiguration.credits = {\n            enabled: false\n        };\n    }\n\n    private setDonutChartTooltip(): void {\n        const this$: this = this;\n        this.cloneConfiguration.tooltip = {\n            useHTML: true,\n            split: false,\n            backgroundColor: AswChartConstants.blackColor,\n            borderColor: AswChartConstants.blackColor,\n            style: {\n                color: AswChartConstants.whiteColor,\n                fontWeight: AswChartConstants.fontWeight\n            },\n            borderRadius: 0,\n            enabled: this.isMute ? false : true,\n            formatter(): string {\n                const percentage: number = this.point.percentage as number;\n                return `\n                    <div class=\"row\">\n                        <div class=\"col-md-12 text-end text-right\">\n                            <span style=\"color: ${this.point.color}\">\\u25A0</span>\n                            <strong>${this.point.name}</strong>\n                        </div>\n                        <div class=\"col-md-12 text-end text-right\">\n                            ${this$.percentPipe.transform(percentage / 100, '.2')}\n                        </div>\n                        <div class=\"col-md-12 text-end text-right\">\n                            ${this$.currencyPipe.transform(this.point.options.value, this$.currencyCode)}\n                        </div>\n                    </div>\n                `;\n            }\n        };\n    }\n\n    private donutChartSliceClick(): void {\n        if (this.isMute) { return; }\n        this.cloneConfiguration.plotOptions = {\n            series: {\n                dataLabels: {\n                    enabled: false\n                },\n                point: {\n                    events: {\n                        click: ((event: PointClickEventObject) => {\n                            const pointClickEvent: PointClickEvent = {\n                                name: event.point.name,\n                                id: event.point.options.id,\n                                percentage: event.point.percentage,\n                                value: event.point.options.value,\n                                target: event.point.options.target\n                            };\n                            this.donutSliceClick.emit(pointClickEvent);\n                        })\n                    }\n                }\n            }\n        };\n    }\n\n    private setDonutChartSeriesOptions(series: SeriesPieOptions[]): void {\n        series.forEach((seriesOption: SeriesPieOptions) => {\n            seriesOption.allowPointSelect = true;\n            seriesOption.showInLegend = true;\n            // if (this.chartType === ChartTypeEnum.Donut) {\n            //     seriesOption.innerSize = AswChartConstants.innerSize;\n            // }\n            if (this.isMute) {\n                seriesOption.opacity = 0.35;\n                seriesOption.states = {\n                    hover: {\n                        enabled: false\n                    },\n                    inactive: {\n                        enabled: false\n                    }\n                };\n                seriesOption.slicedOffset = 0;\n            }\n            seriesOption.cursor = AswChartConstants.pointer;\n            const data: PointOptionsObject[] = seriesOption.data as PointOptionsObject[];\n            this.handleNegativeSeriesData(data);\n            const sortedSeriesOptionData: PointOptionsObject[] = this.isLegendSort ? this.sortSeriesData(data) : data;\n            seriesOption.data = sortedSeriesOptionData;\n        });\n    }\n\n    private sortSeriesData(data: PointOptionsObject[]): PointOptionsObject[] {\n        if (this.legendType === LegendTypeEnum.Default) {\n            data.sort((a: any, b: any) => {\n                return ('' + a.name).localeCompare(b.name);\n            });\n            return data;\n        } else {\n            data.sort((a: any, b: any) => {\n                if (a.y && b.y) {\n                    return a.value - b.value;\n                } else {\n                    return 0;\n                }\n            });\n            data.reverse();\n            return data;\n        }\n    }\n\n    private handleNegativeSeriesData(data: PointOptionsObject[]): void {\n        data.forEach((element: PointOptionsObject) => {\n            element.value = element.y;\n            element.y = element.y ? Math.abs(element.y) : 0.001;\n        });\n    }\n\n    private setDonutChartLegendOption(legendWidthPx: number): void {\n        const this$: this = this;\n        this.cloneConfiguration.legend = {\n            useHTML: true,\n            enabled: this.isMute ? false : this.isLegendDisplay,\n            floating: false,\n            align: this.setLegendAlignment(),\n            layout: 'vertical',\n            verticalAlign: this.setLegendVerticalAlignment(),\n            symbolHeight: 10,\n            symbolWidth: 10,\n            symbolRadius: 0,\n            itemMarginTop: 3, // Space between each category in the legend\n            itemMarginBottom: 3,\n            itemStyle: {\n                fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall ? '12px' : '14px',\n                fontWeight: AswChartConstants.fontWeight\n            },\n            width: legendWidthPx + 15,\n            title: {\n                text: this$.setDonutChartLegendWithHeader(legendWidthPx + 15),\n                style: {\n                    fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall\n                        ? AswChartConstants.fontSize12 : AswChartConstants.fontSize14,\n                    color: '#6c757d',\n                    fontWeight: AswChartConstants.fontWeight,\n                    fontFamily: '500 14px/20px Google Sans Text,Arial,Helvetica,sans-serif'\n                }\n            },\n            labelFormatter(): string {\n                const point: Point = this as Point;\n                return this$.setDonutChartLegendWithHeader(\n                    legendWidthPx,\n                    point.name,\n                    point.percentage,\n                    point.options.value);\n            }\n        };\n    }\n\n    private setFontSize(): string {\n        return this.deviceSize === GridOptionsEnum.ExtraSmall ? AswChartConstants.fontSize14 : AswChartConstants.fontSize16;\n    }\n\n    private setLegendAlignment(): AlignValue {\n        if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\n            return 'center';\n        } else if (this.legendPosition === LegendPositionEnum.Right) {\n            return LegendPositionEnum.Right;\n        } else if (this.legendPosition === LegendPositionEnum.Left) {\n            return LegendPositionEnum.Left;\n        } else {\n            return 'center';\n        }\n    }\n\n    private setLegendVerticalAlignment(): VerticalAlignValue {\n        if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\n            return LegendPositionEnum.Bottom;\n        } else if (this.legendPosition === LegendPositionEnum.Right) {\n            return 'middle';\n        } else if (this.legendPosition === LegendPositionEnum.Left) {\n            return 'middle';\n        } else {\n            return LegendPositionEnum.Bottom;\n        }\n    }\n\n    private setDonutChartLegendWithHeader(\n        legendWidthPx: number,\n        name?: string | null,\n        percentage?: number | undefined,\n        value?: number | null | undefined): string {\n        let legendCategoryWidthPx: number;\n        let legendValueWidthPx: number;\n        let legendPercentageWidthPx: number;\n        switch (this.legendType) {\n            case LegendTypeEnum.Default:\n                return `\n                <div style=\"width:${legendWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-sm-12 col-12\">\n                            ${name ? name : 'Category'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            case LegendTypeEnum.Percentage:\n                legendCategoryWidthPx = legendWidthPx * 0.9;\n                legendPercentageWidthPx = legendWidthPx * 0.1;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8 col-sm-8 col-8\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-4 col-sm-4 col-4 text-end text-right\">\n                            ${percentage ? this.percentPipe.transform(percentage / 100, '.0') : '%'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            case LegendTypeEnum.Value:\n                legendCategoryWidthPx = legendWidthPx * 0.5;\n                legendValueWidthPx = legendWidthPx * 0.5;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendValueWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-sm-6 col-6\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-6 col-sm-6 col-6 text-end text-right\">\n                            ${value ? this.currencyPipe.transform(value, 'INR') : 'Total'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            default:\n                legendCategoryWidthPx = legendWidthPx * 0.5;\n                legendPercentageWidthPx = legendWidthPx * 0.1;\n                legendValueWidthPx = legendWidthPx * 0.4;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx + legendValueWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-5 col-sm-5 col-5\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-2 col-xs-2 col-2 text-end text-right\">\n                            ${percentage ? this.percentPipe.transform(percentage / 100) : '%'}\n                        </div>\n                        <div class=\"col-md-5 col-sm-5 col-5 text-end text-right\">\n                            ${value ? this.currencyPipe.transform(value, this.currencyCode, 'symbol', '.2') : 'Total'}\n                        </div>\n                    </div>\n                </div>\n                `;\n        }\n    }\n\n    private setDonutChartInnerText(): void {\n        const this$: this = this;\n        this.cloneConfiguration.chart = {\n            events: {\n                load(): void {\n                    let centerX: number;\n                    let centerY: number;\n                    let itemWidth: number;\n                    this.series.forEach((element: Series) => {\n                        const points: Point[] = element.points.slice(0, 1);\n                        points.forEach((point: any) => {\n                            centerX = this.plotLeft + (point.shapeArgs.x - point.shapeArgs.innerR) + 8;\n                            centerY = this.plotTop + point.shapeArgs.y - 14;\n                            itemWidth = (point.shapeArgs.innerR * 2) - 20;\n                        });\n                        if (this$.icon) {\n                            this.renderer.label(this$.setInnerTextIcon(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\n                                centerX, centerY, undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                        } else {\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\n                                centerX, centerY, undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextTarget(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                        }\n                    });\n                }\n            }\n        };\n    }\n\n    private setInnerTextLabel(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.label}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextIcon(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.icon}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextValue(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    <strong>${this.aswCurrencyPipe.transform(this.amount)}</strong>\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextTarget(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.target ? this.target : ''}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Line } from './component/line';\n\n@NgModule({\n    declarations: [\n        Line\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class LineModule { }\n","/**\r\n * @license\r\n * Copyright ASW (A Software World) All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file\r\n */\r\n\r\nexport * from './component/line';\r\nexport * from './line.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}