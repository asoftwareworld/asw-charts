import { CurrencyPipe } from '@angular/common';
import { AfterViewInit, ElementRef, EventEmitter, OnChanges } from '@angular/core';
import { AswCurrencyPipe, ChartLegendTypeEnum, CurrencyCodeEnum, GridOptionsEnum, LegendLayoutEnum, LegendPositionEnum } from '@asoftwareworld/charts/core';
import { Options } from 'highcharts';
import * as i0 from "@angular/core";
export declare class AswLine implements OnChanges, AfterViewInit {
    private currencyPipe;
    private aswCurrencyPipe;
    private cloneConfiguration;
    deviceSize: GridOptionsEnum;
    private viewInitialized;
    config: Options;
    isLegendSort: boolean;
    isLegendDisplay: boolean;
    currencyCode: CurrencyCodeEnum;
    legendPosition: LegendPositionEnum;
    legendType: ChartLegendTypeEnum;
    legendWidthPx: number;
    legendLayout: LegendLayoutEnum;
    linePointClick: EventEmitter<any>;
    lineChart: ElementRef;
    constructor(currencyPipe: CurrencyPipe, aswCurrencyPipe: AswCurrencyPipe);
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    initializeChart(): void;
    onResize(): void;
    private removeChartCredit;
    private setLineChartTooltip;
    private clickOnLinePoint;
    private setLineChartSeriesOptions;
    private sortSeriesData;
    private handleNegativeSeriesData;
    private setLineChartLegendOption;
    private setLegendAlignment;
    private setLegendVerticalAlignment;
    private setLineChartLegendWithHeader;
    static ɵfac: i0.ɵɵFactoryDeclaration<AswLine, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AswLine, "asw-line", never, { "config": "config"; "isLegendSort": "isLegendSort"; "isLegendDisplay": "isLegendDisplay"; "currencyCode": "currencyCode"; "legendPosition": "legendPosition"; "legendType": "legendType"; "legendWidthPx": "legendWidthPx"; "legendLayout": "legendLayout"; }, { "linePointClick": "linePointClick"; }, never, never>;
}
