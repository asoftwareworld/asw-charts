{"version":3,"file":"asoftwareworld-charts-semi-circle-donut.umd.js","sources":["../../app/component/semi-circle-donut/component/semi-circle-donut.ts","../../app/component/semi-circle-donut/semi-circle-donut.module.ts","../../app/component/semi-circle-donut/public_api.ts","../../app/component/semi-circle-donut/asoftwareworld-charts-semi-circle-donut.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright ASW (A Software World) All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file\r\n */\r\n\r\nimport { CurrencyPipe, PercentPipe } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewChild } from '@angular/core';\r\nimport { AswChartConstants, CurrencyCodeEnum, GridOptionsEnum } from '@asoftwareworld/charts/core';\r\nimport { ObjectUtils } from '@asoftwareworld/charts/utils';\r\nimport * as Highcharts from 'highcharts';\r\ndeclare var require: any;\r\nconst HighchartsMore = require('highcharts/highcharts-more.src');\r\nHighchartsMore(Highcharts);\r\n\r\nimport {\r\n    AlignValue,\r\n    Options,\r\n    PointClickEventObject,\r\n    PointOptionsObject,\r\n    Point,\r\n    Series,\r\n    SeriesPieOptions,\r\n    VerticalAlignValue\r\n} from 'highcharts';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'asw-semi-circle-donut',\r\n    templateUrl: './semi-circle-donut.html',\r\n    styleUrls: ['./semi-circle-donut.scss']\r\n})\r\nexport class AswSemiCircleDonut implements OnChanges, AfterViewInit {\r\n\r\n    private cloneConfiguration!: Options;\r\n    public deviceSize: GridOptionsEnum = GridOptionsEnum.Large;\r\n    private viewInitialized = false;\r\n    @Input() config!: Options;\r\n    @Input() isLegendSort = true;\r\n    @Input() isMute = false;\r\n    @Input() isLegendDisplay = true;\r\n    @Input() icon!: string;\r\n    @Input() label: string | undefined;\r\n    @Input() amount: number | null | undefined;\r\n    @Input() target!: string;\r\n    // @Input() chartType: ChartTypeEnum = ChartTypeEnum.Donut;\r\n    @Input() currencyCode: CurrencyCodeEnum = CurrencyCodeEnum.INR;\r\n    // @Input() legendPosition: LegendPositionEnum = LegendPositionEnum.Right;\r\n    // @Input() legendType: LegendTypeEnum = LegendTypeEnum.Both;\r\n    @Input() legendWidthPx = 250;\r\n\r\n    @Output() donutSliceClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('semiCircleDonutChart', { static: true }) semiCircleDonutChart!: ElementRef;\r\n    @ViewChild('chartId', { static: true }) chartId!: ElementRef;\r\n    constructor(\r\n        private percentPipe: PercentPipe,\r\n        private currencyPipe: CurrencyPipe) { }\r\n\r\n    ngOnChanges(): void {\r\n        if (!this.viewInitialized) {\r\n            return;\r\n        }\r\n        this.initializeChart();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewInitialized = true;\r\n        this.initializeChart();\r\n    }\r\n\r\n    initializeChart(): void {\r\n        if (this.config) {\r\n            this.cloneConfiguration = this.config;\r\n            const containerWidth = this.semiCircleDonutChart.nativeElement.clientWidth;\r\n            this.deviceSize = ObjectUtils.findDeviceSize(containerWidth);\r\n            // this.findDeviceSize();\r\n            // this.removeChartCredit();\r\n            // this.setDonutChartTooltip();\r\n            // const series: SeriesPieOptions[] = this.cloneConfiguration.series as SeriesPieOptions[];\r\n            // this.setDonutChartSeriesOptions(series);\r\n            // this.setDonutChartLegendOption(this.legendWidthPx);\r\n            // // if (this.chartType === ChartTypeEnum.Donut) {\r\n            // //     this.setDonutChartInnerText();\r\n            // // }\r\n            // this.donutChartSliceClick();\r\n            Highcharts.chart(this.semiCircleDonutChart.nativeElement, this.cloneConfiguration);\r\n        }\r\n    }\r\n\r\n    private removeChartCredit(): void {\r\n        this.cloneConfiguration.credits = {\r\n            enabled: false\r\n        };\r\n    }\r\n\r\n    private setDonutChartTooltip(): void {\r\n        const this$: this = this;\r\n        this.cloneConfiguration.tooltip = {\r\n            useHTML: true,\r\n            split: false,\r\n            backgroundColor: AswChartConstants.blackColor,\r\n            borderColor: AswChartConstants.blackColor,\r\n            style: {\r\n                color: AswChartConstants.whiteColor,\r\n                fontWeight: AswChartConstants.fontWeight\r\n            },\r\n            borderRadius: 0,\r\n            enabled: this.isMute ? false : true,\r\n            formatter(): string {\r\n                const percentage: number = this.point.percentage as number;\r\n                return `\r\n                     <div class=\"row\">\r\n                         <div class=\"col-md-12 text-end\">\r\n                             <span style=\"color: ${this.point.color}\">\\u25A0</span>\r\n                             <strong>${this.point.name}</strong>\r\n                         </div>\r\n                         <div class=\"col-md-12 text-end\">\r\n                             ${this$.percentPipe.transform(percentage / 100, '.2')}\r\n                         </div>\r\n                         <div class=\"col-md-12 text-end\">\r\n                             ${this$.currencyPipe.transform(this.point.options.value, this$.currencyCode)}\r\n                         </div>\r\n                     </div>\r\n                 `;\r\n            }\r\n        };\r\n    }\r\n\r\n    private donutChartSliceClick(): void {\r\n        if (this.isMute) { return; }\r\n        this.cloneConfiguration.plotOptions = {\r\n            series: {\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                point: {\r\n                    events: {\r\n                        click: ((event: PointClickEventObject) => {\r\n                            // const pointClickEvent: PointClickEvent = {\r\n                            //     name: event.point.name,\r\n                            //     id: event.point.options.id,\r\n                            //     percentage: event.point.percentage,\r\n                            //     value: event.point.options.value,\r\n                            //     target: event.point.options.target\r\n                            // };\r\n                            // this.donutSliceClick.emit(pointClickEvent);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private setDonutChartSeriesOptions(series: SeriesPieOptions[]): void {\r\n        series.forEach((seriesOption: SeriesPieOptions) => {\r\n            seriesOption.allowPointSelect = true;\r\n            seriesOption.showInLegend = true;\r\n            // if (this.chartType === ChartTypeEnum.Donut) {\r\n            //     seriesOption.innerSize = AswChartConstants.innerSize;\r\n            // }\r\n            if (this.isMute) {\r\n                seriesOption.opacity = 0.35;\r\n                seriesOption.states = {\r\n                    hover: {\r\n                        enabled: false\r\n                    },\r\n                    inactive: {\r\n                        enabled: false\r\n                    }\r\n                };\r\n                seriesOption.slicedOffset = 0;\r\n            }\r\n            seriesOption.cursor = AswChartConstants.pointer;\r\n            const data: PointOptionsObject[] = seriesOption.data as PointOptionsObject[];\r\n            this.handleNegativeSeriesData(data);\r\n            const sortedSeriesOptionData: PointOptionsObject[] = this.isLegendSort ? this.sortSeriesData(data) : data;\r\n            seriesOption.data = sortedSeriesOptionData;\r\n        });\r\n    }\r\n\r\n    private sortSeriesData(data: PointOptionsObject[]): PointOptionsObject[] {\r\n        // if (this.legendType === LegendTypeEnum.Default) {\r\n        //     data.sort((a: any, b: any) => {\r\n        //         return ('' + a.name).localeCompare(b.name);\r\n        //     });\r\n        //     return data;\r\n        // } else {\r\n            data.sort((a: any, b: any) => {\r\n                if (a.y && b.y) {\r\n                    return a.value - b.value;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            data.reverse();\r\n            return data;\r\n        // }\r\n    }\r\n\r\n    private handleNegativeSeriesData(data: PointOptionsObject[]): void {\r\n        data.forEach((element: PointOptionsObject) => {\r\n            element.value = element.y;\r\n            element.y = element.y ? Math.abs(element.y) : 0.001;\r\n        });\r\n    }\r\n\r\n    private setDonutChartLegendOption(legendWidthPx: number): void {\r\n        const this$: this = this;\r\n        this.cloneConfiguration.legend = {\r\n            useHTML: true,\r\n            enabled: this.isMute ? false : this.isLegendDisplay,\r\n            floating: false,\r\n            // navigation: {\r\n            //     arrowSize: 12\r\n            // },\r\n            align: this.setLegendAlignment(),\r\n            layout: 'vertical',\r\n            verticalAlign: this.setLegendVerticalAlignment(),\r\n            symbolHeight: 10,\r\n            symbolWidth: 10,\r\n            symbolRadius: 0,\r\n            itemMarginTop: 3, // Space between each category in the legend\r\n            itemMarginBottom: 3,\r\n            itemStyle: {\r\n                fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall ? '12px' : '14px',\r\n                fontWeight: AswChartConstants.fontWeight\r\n            },\r\n            width: legendWidthPx + 15,\r\n            title: {\r\n                text: this$.setDonutChartLegendWithHeader(legendWidthPx + 15),\r\n                style: {\r\n                    fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall\r\n                        ? AswChartConstants.fontSize12 : AswChartConstants.fontSize14,\r\n                    color: '#6c757d',\r\n                    fontWeight: AswChartConstants.fontWeight,\r\n                    fontFamily: '500 14px/20px Google Sans Text,Arial,Helvetica,sans-serif'\r\n                }\r\n            },\r\n            labelFormatter(): string {\r\n                const point: Point = this as Point;\r\n                return this$.setDonutChartLegendWithHeader(\r\n                    legendWidthPx,\r\n                    point.name,\r\n                    point.percentage,\r\n                    point.options.value);\r\n            }\r\n        };\r\n    }\r\n\r\n    private setFontSize(): string {\r\n        return this.deviceSize === GridOptionsEnum.ExtraSmall ? AswChartConstants.fontSize14 : AswChartConstants.fontSize16;\r\n    }\r\n\r\n    private setLegendAlignment(): AlignValue {\r\n        if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\r\n            return 'center';\r\n        }\r\n        // else if (this.legendPosition === LegendPositionEnum.Right) {\r\n        //     return LegendPositionEnum.Right;\r\n        // } else if (this.legendPosition === LegendPositionEnum.Left) {\r\n        //     return LegendPositionEnum.Left;\r\n        // }\r\n        else {\r\n            return 'center';\r\n        }\r\n    }\r\n\r\n    private setLegendVerticalAlignment(): VerticalAlignValue {\r\n        // if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\r\n        //     return LegendPositionEnum.Bottom;\r\n        // } else if (this.legendPosition === LegendPositionEnum.Right) {\r\n        //     return 'middle';\r\n        // } else if (this.legendPosition === LegendPositionEnum.Left) {\r\n        //     return 'middle';\r\n        // } else {\r\n        //     return LegendPositionEnum.Bottom;\r\n        // }\r\n        return 'bottom';\r\n    }\r\n\r\n    private setDonutChartLegendWithHeader(\r\n        legendWidthPx: number,\r\n        name?: string | null,\r\n        percentage?: number | undefined,\r\n        value?: number | null | undefined): string {\r\n        // let legendCategoryWidthPx: number;\r\n        // let legendValueWidthPx: number;\r\n        // let legendPercentageWidthPx: number;\r\n        // switch (this.legendType) {\r\n        //     case LegendTypeEnum.Default:\r\n        //         return `\r\n        //          <div style=\"width:${legendWidthPx}px\">\r\n        //              <div class=\"row\">\r\n        //                  <div class=\"col-md-12 col-sm-12 col-12\">\r\n        //                      ${name ? name : 'Category'}\r\n        //                  </div>\r\n        //              </div>\r\n        //          </div>\r\n        //          `;\r\n        //     case LegendTypeEnum.Percentage:\r\n        //         legendCategoryWidthPx = legendWidthPx * 0.9;\r\n        //         legendPercentageWidthPx = legendWidthPx * 0.1;\r\n        //         return `\r\n        //          <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx}px\">\r\n        //              <div class=\"row\">\r\n        //                  <div class=\"col-md-8 col-sm-8 col-8\">\r\n        //                      ${name ? name : 'Category'}\r\n        //                  </div>\r\n        //                  <div class=\"col-md-4 col-sm-4 col-4 text-end\">\r\n        //                      ${percentage ? this.percentPipe.transform(percentage / 100, '.0') : '%'}\r\n        //                  </div>\r\n        //              </div>\r\n        //          </div>\r\n        //          `;\r\n        //     case LegendTypeEnum.Value:\r\n        //         legendCategoryWidthPx = legendWidthPx * 0.5;\r\n        //         legendValueWidthPx = legendWidthPx * 0.5;\r\n        //         return `\r\n        //          <div style=\"width:${legendCategoryWidthPx + legendValueWidthPx}px\">\r\n        //              <div class=\"row\">\r\n        //                  <div class=\"col-md-6 col-sm-6 col-6\">\r\n        //                      ${name ? name : 'Category'}\r\n        //                  </div>\r\n        //                  <div class=\"col-md-6 col-sm-6 col-6 text-end\">\r\n        //                      ${value ? this.currencyPipe.transform(value, 'INR') : 'Total'}\r\n        //                  </div>\r\n        //              </div>\r\n        //          </div>\r\n        //          `;\r\n        //     default:\r\n        //         legendCategoryWidthPx = legendWidthPx * 0.5;\r\n        //         legendPercentageWidthPx = legendWidthPx * 0.1;\r\n        //         legendValueWidthPx = legendWidthPx * 0.4;\r\n        //         return `\r\n        //          <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx + legendValueWidthPx}px\">\r\n        //              <div class=\"row\">\r\n        //                  <div class=\"col-md-5 col-sm-5 col-5\">\r\n        //                      ${name ? name : 'Category'}\r\n        //                  </div>\r\n        //                  <div class=\"col-md-2 col-xs-2 col-2 text-end\">\r\n        //                      ${percentage ? this.percentPipe.transform(percentage / 100) : '%'}\r\n        //                  </div>\r\n        //                  <div class=\"col-md-5 col-sm-5 col-5 text-end\">\r\n        //                      ${value ? this.currencyPipe.transform(value, this.currencyCode) : 'Total'}\r\n        //                  </div>\r\n        //              </div>\r\n        //          </div>\r\n        //          `;\r\n        // }\r\n        return '';\r\n    }\r\n\r\n    private findDeviceSize(): void {\r\n        const containerWidth = this.semiCircleDonutChart.nativeElement.clientWidth;\r\n        if (containerWidth >= 1400) {\r\n            this.deviceSize = GridOptionsEnum.ExtraExtraLarge;\r\n        } else if (containerWidth >= 1200) {\r\n            this.deviceSize = GridOptionsEnum.ExtraLarge;\r\n        } else if (containerWidth >= 992) {\r\n            this.deviceSize = GridOptionsEnum.Large;\r\n        } else if (containerWidth >= 768) {\r\n            this.deviceSize = GridOptionsEnum.Medium;\r\n        } else if (containerWidth >= 576) {\r\n            this.deviceSize = GridOptionsEnum.Small;\r\n        } else if (containerWidth < 576) {\r\n            this.deviceSize = GridOptionsEnum.ExtraSmall;\r\n        }\r\n    }\r\n\r\n    private setDonutChartInnerText(): void {\r\n        const this$: this = this;\r\n        this.cloneConfiguration.chart = {\r\n            events: {\r\n                load(): void {\r\n                    let centerX: number;\r\n                    let centerY: number;\r\n                    let itemWidth: number;\r\n                    this.series.forEach((element: Series) => {\r\n                        const points: Point[] = element.points.slice(0, 1);\r\n                        points.forEach((point: any) => {\r\n                            centerX = this.plotLeft + (point.shapeArgs.x - point.shapeArgs.innerR) + 8;\r\n                            centerY = this.plotTop + point.shapeArgs.y - 14;\r\n                            itemWidth = (point.shapeArgs.innerR * 2) - 20;\r\n                        });\r\n                        if (this$.icon) {\r\n                            this.renderer.label(this$.setInnerTextIcon(itemWidth),\r\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\r\n                                undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\r\n                                centerX, centerY, undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\r\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\r\n                                undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                        } else {\r\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\r\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\r\n                                undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\r\n                                centerX, centerY, undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                            this.renderer.label(this$.setInnerTextTarget(itemWidth),\r\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\r\n                                undefined, 30, 30, true).css({\r\n                                    fontSize: this$.setFontSize(),\r\n                                    textAlign: AswChartConstants.centerAlign,\r\n                                    fontWeight: AswChartConstants.fontWeight\r\n                                }).add();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private setInnerTextLabel(width: number): string {\r\n        return `\r\n         <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\r\n             <div class=\"row\">\r\n                 <div class=\"col-md-12 text-truncate\">\r\n                     ${this.label}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         `;\r\n    }\r\n\r\n    private setInnerTextIcon(width: number): string {\r\n        return `\r\n         <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\r\n             <div class=\"row\">\r\n                 <div class=\"col-md-12 text-truncate\">\r\n                     ${this.icon}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         `;\r\n    }\r\n\r\n    private setInnerTextValue(width: number): string {\r\n        return `\r\n         <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\r\n             <div class=\"row\">\r\n                 <div class=\"col-md-12 text-truncate\">\r\n                     <strong>${this.currencyPipe.transform(this.amount, this.currencyCode)}</strong>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         `;\r\n    }\r\n\r\n    private setInnerTextTarget(width: number): string {\r\n        return `\r\n         <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\r\n             <div class=\"row\">\r\n                 <div class=\"col-md-12 text-truncate\">\r\n                     ${this.target ? this.target : ''}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         `;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright ASW (A Software World) All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe, PercentPipe } from '@angular/common';\r\nimport { AswSemiCircleDonut } from './component/semi-circle-donut';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AswSemiCircleDonut\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    exports: [\r\n        AswSemiCircleDonut\r\n    ],\r\n    providers: [\r\n        PercentPipe,\r\n        CurrencyPipe,\r\n        Document\r\n    ]\r\n})\r\nexport class AswSemiCircleDonutModule { }\r\n","/**\r\n * @license\r\n * Copyright ASW (A Software World) All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file\r\n */\r\n\r\nexport * from './component/semi-circle-donut';\r\nexport * from './semi-circle-donut.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Highcharts","GridOptionsEnum","CurrencyCodeEnum","EventEmitter","ObjectUtils","AswChartConstants","Component","PercentPipe","CurrencyPipe","Input","Output","ViewChild","NgModule","CommonModule"],"mappings":"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"}