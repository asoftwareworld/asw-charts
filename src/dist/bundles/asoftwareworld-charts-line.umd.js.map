{"version":3,"file":"asoftwareworld-charts-line.umd.js","sources":["../../app/component/line/component/line.ts","../../app/component/line/line.module.ts","../../app/component/line/public_api.ts","../../app/component/line/asoftwareworld-charts-line.ts"],"sourcesContent":["import { CurrencyPipe, PercentPipe } from '@angular/common';\nimport {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    AswChartConstants,\n    AswCurrencyPipe,\n    CurrencyCodeEnum,\n    GridOptionsEnum,\n    LegendLayoutEnum,\n    LegendPositionEnum,\n    LegendTypeEnum,\n    PointClickEvent\n} from '@asoftwareworld/charts/core';\nimport { ObjectUtils } from '@asoftwareworld/charts/utils';\nimport * as Highcharts from 'highcharts';\nimport {\n    AlignValue,\n    Options,\n    PointClickEventObject,\n    PointOptionsObject,\n    Point,\n    Series,\n    SeriesPieOptions,\n    VerticalAlignValue\n} from 'highcharts';\n\n@Component({\n    selector: 'asw-line',\n    templateUrl: './line.html',\n    styleUrls: ['./line.scss']\n})\nexport class Line implements OnChanges, AfterViewInit {\n\n    private cloneConfiguration!: Options;\n    public deviceSize: GridOptionsEnum = GridOptionsEnum.Large;\n    private viewInitialized = false;\n    @Input() config!: Options;\n    @Input() isLegendSort = true;\n    @Input() isMute = false;\n    @Input() isLegendDisplay = true;\n    @Input() icon!: string;\n    @Input() label: string | undefined;\n    @Input() amount: number | null | undefined;\n    @Input() target!: string;\n    @Input() currencyCode: CurrencyCodeEnum = CurrencyCodeEnum.INR;\n    @Input() legendPosition: LegendPositionEnum = LegendPositionEnum.Right;\n    @Input() legendType: LegendTypeEnum = LegendTypeEnum.Both;\n    @Input() legendWidthPx = 250;\n    @Input() legendLayout: LegendLayoutEnum = LegendLayoutEnum.Vertical;\n\n    @Output() donutSliceClick: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('lineChart', { static: true }) pieDonutChart!: ElementRef;\n    constructor(\n        private percentPipe: PercentPipe,\n        private currencyPipe: CurrencyPipe,\n        private aswCurrencyPipe: AswCurrencyPipe) { }\n\n    ngOnChanges(): void {\n        if (!this.viewInitialized) {\n            return;\n        }\n        this.initializeChart();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitialized = true;\n        this.initializeChart();\n    }\n\n    initializeChart(): void {\n        if (this.config) {\n            this.cloneConfiguration = this.config;\n            const containerWidth = this.pieDonutChart.nativeElement.clientWidth;\n            this.deviceSize = ObjectUtils.findDeviceSize(containerWidth);\n            this.removeChartCredit();\n            this.setDonutChartTooltip();\n            const series: SeriesPieOptions[] = this.cloneConfiguration.series as SeriesPieOptions[];\n            this.setDonutChartSeriesOptions(series);\n            if (this.legendLayout === LegendLayoutEnum.Vertical) {\n                this.setDonutChartLegendOption(this.legendWidthPx);\n            }\n            // if (this.chartType === ChartTypeEnum.Donut) {\n            //     this.setDonutChartInnerText();\n            // }\n            this.donutChartSliceClick();\n            Highcharts.chart(this.pieDonutChart.nativeElement, this.cloneConfiguration);\n        }\n    }\n\n    @HostListener('window:resize')\n    onResize(): void {\n        this.initializeChart();\n    }\n\n    private removeChartCredit(): void {\n        this.cloneConfiguration.credits = {\n            enabled: false\n        };\n    }\n\n    private setDonutChartTooltip(): void {\n        const this$: this = this;\n        this.cloneConfiguration.tooltip = {\n            useHTML: true,\n            split: false,\n            backgroundColor: AswChartConstants.blackColor,\n            borderColor: AswChartConstants.blackColor,\n            style: {\n                color: AswChartConstants.whiteColor,\n                fontWeight: AswChartConstants.fontWeight\n            },\n            borderRadius: 0,\n            enabled: this.isMute ? false : true,\n            formatter(): string {\n                const percentage: number = this.point.percentage as number;\n                return `\n                    <div class=\"row\">\n                        <div class=\"col-md-12 text-end text-right\">\n                            <span style=\"color: ${this.point.color}\">\\u25A0</span>\n                            <strong>${this.point.name}</strong>\n                        </div>\n                        <div class=\"col-md-12 text-end text-right\">\n                            ${this$.percentPipe.transform(percentage / 100, '.2')}\n                        </div>\n                        <div class=\"col-md-12 text-end text-right\">\n                            ${this$.currencyPipe.transform(this.point.options.value, this$.currencyCode)}\n                        </div>\n                    </div>\n                `;\n            }\n        };\n    }\n\n    private donutChartSliceClick(): void {\n        if (this.isMute) { return; }\n        this.cloneConfiguration.plotOptions = {\n            series: {\n                dataLabels: {\n                    enabled: false\n                },\n                point: {\n                    events: {\n                        click: ((event: PointClickEventObject) => {\n                            const pointClickEvent: PointClickEvent = {\n                                name: event.point.name,\n                                id: event.point.options.id,\n                                percentage: event.point.percentage,\n                                value: event.point.options.value,\n                                target: event.point.options.target\n                            };\n                            this.donutSliceClick.emit(pointClickEvent);\n                        })\n                    }\n                }\n            }\n        };\n    }\n\n    private setDonutChartSeriesOptions(series: SeriesPieOptions[]): void {\n        series.forEach((seriesOption: SeriesPieOptions) => {\n            seriesOption.allowPointSelect = true;\n            seriesOption.showInLegend = true;\n            // if (this.chartType === ChartTypeEnum.Donut) {\n            //     seriesOption.innerSize = AswChartConstants.innerSize;\n            // }\n            if (this.isMute) {\n                seriesOption.opacity = 0.35;\n                seriesOption.states = {\n                    hover: {\n                        enabled: false\n                    },\n                    inactive: {\n                        enabled: false\n                    }\n                };\n                seriesOption.slicedOffset = 0;\n            }\n            seriesOption.cursor = AswChartConstants.pointer;\n            const data: PointOptionsObject[] = seriesOption.data as PointOptionsObject[];\n            this.handleNegativeSeriesData(data);\n            const sortedSeriesOptionData: PointOptionsObject[] = this.isLegendSort ? this.sortSeriesData(data) : data;\n            seriesOption.data = sortedSeriesOptionData;\n        });\n    }\n\n    private sortSeriesData(data: PointOptionsObject[]): PointOptionsObject[] {\n        if (this.legendType === LegendTypeEnum.Default) {\n            data.sort((a: any, b: any) => {\n                return ('' + a.name).localeCompare(b.name);\n            });\n            return data;\n        } else {\n            data.sort((a: any, b: any) => {\n                if (a.y && b.y) {\n                    return a.value - b.value;\n                } else {\n                    return 0;\n                }\n            });\n            data.reverse();\n            return data;\n        }\n    }\n\n    private handleNegativeSeriesData(data: PointOptionsObject[]): void {\n        data.forEach((element: PointOptionsObject) => {\n            element.value = element.y;\n            element.y = element.y ? Math.abs(element.y) : 0.001;\n        });\n    }\n\n    private setDonutChartLegendOption(legendWidthPx: number): void {\n        const this$: this = this;\n        this.cloneConfiguration.legend = {\n            useHTML: true,\n            enabled: this.isMute ? false : this.isLegendDisplay,\n            floating: false,\n            align: this.setLegendAlignment(),\n            layout: 'vertical',\n            verticalAlign: this.setLegendVerticalAlignment(),\n            symbolHeight: 10,\n            symbolWidth: 10,\n            symbolRadius: 0,\n            itemMarginTop: 3, // Space between each category in the legend\n            itemMarginBottom: 3,\n            itemStyle: {\n                fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall ? '12px' : '14px',\n                fontWeight: AswChartConstants.fontWeight\n            },\n            width: legendWidthPx + 15,\n            title: {\n                text: this$.setDonutChartLegendWithHeader(legendWidthPx + 15),\n                style: {\n                    fontSize: this.deviceSize === GridOptionsEnum.ExtraSmall\n                        ? AswChartConstants.fontSize12 : AswChartConstants.fontSize14,\n                    color: '#6c757d',\n                    fontWeight: AswChartConstants.fontWeight,\n                    fontFamily: '500 14px/20px Google Sans Text,Arial,Helvetica,sans-serif'\n                }\n            },\n            labelFormatter(): string {\n                const point: Point = this as Point;\n                return this$.setDonutChartLegendWithHeader(\n                    legendWidthPx,\n                    point.name,\n                    point.percentage,\n                    point.options.value);\n            }\n        };\n    }\n\n    private setFontSize(): string {\n        return this.deviceSize === GridOptionsEnum.ExtraSmall ? AswChartConstants.fontSize14 : AswChartConstants.fontSize16;\n    }\n\n    private setLegendAlignment(): AlignValue {\n        if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\n            return 'center';\n        } else if (this.legendPosition === LegendPositionEnum.Right) {\n            return LegendPositionEnum.Right;\n        } else if (this.legendPosition === LegendPositionEnum.Left) {\n            return LegendPositionEnum.Left;\n        } else {\n            return 'center';\n        }\n    }\n\n    private setLegendVerticalAlignment(): VerticalAlignValue {\n        if (this.deviceSize === GridOptionsEnum.ExtraSmall) {\n            return LegendPositionEnum.Bottom;\n        } else if (this.legendPosition === LegendPositionEnum.Right) {\n            return 'middle';\n        } else if (this.legendPosition === LegendPositionEnum.Left) {\n            return 'middle';\n        } else {\n            return LegendPositionEnum.Bottom;\n        }\n    }\n\n    private setDonutChartLegendWithHeader(\n        legendWidthPx: number,\n        name?: string | null,\n        percentage?: number | undefined,\n        value?: number | null | undefined): string {\n        let legendCategoryWidthPx: number;\n        let legendValueWidthPx: number;\n        let legendPercentageWidthPx: number;\n        switch (this.legendType) {\n            case LegendTypeEnum.Default:\n                return `\n                <div style=\"width:${legendWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12 col-sm-12 col-12\">\n                            ${name ? name : 'Category'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            case LegendTypeEnum.Percentage:\n                legendCategoryWidthPx = legendWidthPx * 0.9;\n                legendPercentageWidthPx = legendWidthPx * 0.1;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8 col-sm-8 col-8\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-4 col-sm-4 col-4 text-end text-right\">\n                            ${percentage ? this.percentPipe.transform(percentage / 100, '.0') : '%'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            case LegendTypeEnum.Value:\n                legendCategoryWidthPx = legendWidthPx * 0.5;\n                legendValueWidthPx = legendWidthPx * 0.5;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendValueWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 col-sm-6 col-6\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-6 col-sm-6 col-6 text-end text-right\">\n                            ${value ? this.currencyPipe.transform(value, 'INR') : 'Total'}\n                        </div>\n                    </div>\n                </div>\n                `;\n            default:\n                legendCategoryWidthPx = legendWidthPx * 0.5;\n                legendPercentageWidthPx = legendWidthPx * 0.1;\n                legendValueWidthPx = legendWidthPx * 0.4;\n                return `\n                <div style=\"width:${legendCategoryWidthPx + legendPercentageWidthPx + legendValueWidthPx}px\">\n                    <div class=\"row\">\n                        <div class=\"col-md-5 col-sm-5 col-5\">\n                            ${name ? name : 'Category'}\n                        </div>\n                        <div class=\"col-md-2 col-xs-2 col-2 text-end text-right\">\n                            ${percentage ? this.percentPipe.transform(percentage / 100) : '%'}\n                        </div>\n                        <div class=\"col-md-5 col-sm-5 col-5 text-end text-right\">\n                            ${value ? this.currencyPipe.transform(value, this.currencyCode, 'symbol', '.2') : 'Total'}\n                        </div>\n                    </div>\n                </div>\n                `;\n        }\n    }\n\n    private setDonutChartInnerText(): void {\n        const this$: this = this;\n        this.cloneConfiguration.chart = {\n            events: {\n                load(): void {\n                    let centerX: number;\n                    let centerY: number;\n                    let itemWidth: number;\n                    this.series.forEach((element: Series) => {\n                        const points: Point[] = element.points.slice(0, 1);\n                        points.forEach((point: any) => {\n                            centerX = this.plotLeft + (point.shapeArgs.x - point.shapeArgs.innerR) + 8;\n                            centerY = this.plotTop + point.shapeArgs.y - 14;\n                            itemWidth = (point.shapeArgs.innerR * 2) - 20;\n                        });\n                        if (this$.icon) {\n                            this.renderer.label(this$.setInnerTextIcon(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\n                                centerX, centerY, undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                        } else {\n                            this.renderer.label(this$.setInnerTextLabel(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY - 20 : centerY - 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextValue(itemWidth),\n                                centerX, centerY, undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                            this.renderer.label(this$.setInnerTextTarget(itemWidth),\n                                centerX, this$.deviceSize === GridOptionsEnum.ExtraSmall ? centerY + 20 : centerY + 25,\n                                undefined, 30, 30, true).css({\n                                    fontSize: this$.setFontSize(),\n                                    textAlign: AswChartConstants.centerAlign,\n                                    fontWeight: AswChartConstants.fontWeight\n                                }).add();\n                        }\n                    });\n                }\n            }\n        };\n    }\n\n    private setInnerTextLabel(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.label}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextIcon(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.icon}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextValue(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    <strong>${this.aswCurrencyPipe.transform(this.amount)}</strong>\n                </div>\n            </div>\n        </div>\n        `;\n    }\n\n    private setInnerTextTarget(width: number): string {\n        return `\n        <div style=\"width: ${width}px; opacity: ${this.isMute ? 0.35 : 1}\">\n            <div class=\"row\">\n                <div class=\"col-md-12 text-truncate\">\n                    ${this.target ? this.target : ''}\n                </div>\n            </div>\n        </div>\n        `;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Line } from './component/line';\n\n@NgModule({\n    declarations: [\n        Line\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class LineModule { }\n","/**\r\n * @license\r\n * Copyright ASW (A Software World) All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file\r\n */\r\n\r\nexport * from './component/line';\r\nexport * from './line.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["GridOptionsEnum","CurrencyCodeEnum","LegendPositionEnum","LegendTypeEnum","LegendLayoutEnum","EventEmitter","ObjectUtils","Highcharts","AswChartConstants","Component","PercentPipe","CurrencyPipe","AswCurrencyPipe","Input","Output","ViewChild","HostListener","NgModule","CommonModule"],"mappings":"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"}